networks:
  app_network:
    driver: bridge

services:
  caddy:
    container_name: caddy
    image: caddy:latest
    ports:
      - "80:80"
      - "443:443"
      - "5000:5000" # For localhost
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - flask_app
    networks:
      - app_network

  flask_app:
    container_name: flask_app
    build: .
    environment:
      - DB_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@flask_db:5432/${POSTGRES_DB}
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY}
      - WEATHER_POST_PASSWORD=${WEATHER_POST_PASSWORD}
      - REDIS_URL=redis://flask_redis:6379/0
      - IMGPROXY_KEY=${IMGPROXY_KEY}
      - IMGPROXY_SALT=${IMGPROXY_SALT}
      - FLASK_ENV=${FLASK_ENV}
    depends_on:
      - flask_db
      - flask_redis
    networks:
      - app_network

  flask_db:
    container_name: flask_db
    image: timescale/timescaledb:latest-pg15
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network

  flask_redis:
    container_name: flask_redis
    image: redis:latest
    networks:
      - app_network

  imgproxy:
    image: darthsim/imgproxy:latest
    ports:
      - "8080:8080"
    environment:
      - IMGPROXY_ENABLE_WEBP_DETECTION="true"
      - IMGPROXY_KEY=${IMGPROXY_KEY}
      - IMGPROXY_SALT=${IMGPROXY_SALT}
    networks:
      - app_network

volumes:
  pgdata: {}
  caddy_data: {}
  caddy_config: {}
